(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{258:function(a,s,t){"use strict";t.r(s);var n=t(28),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"类和方法的创建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类和方法的创建"}},[a._v("#")]),a._v(" 类和方法的创建")]),a._v(" "),t("h2",{attrs:{id:"创建类和方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建类和方法"}},[a._v("#")]),a._v(" 创建类和方法")]),a._v(" "),t("h3",{attrs:{id:"创建类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建类"}},[a._v("#")]),a._v(" 创建类")]),a._v(" "),t("p",[a._v("还记得在Step1中创建主类的操作吗? 现在我们在"),t("code",[a._v("rinya.bukkit.helloworldplugin")]),a._v("包中创建一个"),t("code",[a._v("DemoClass")]),a._v("类来试试手."),t("br"),a._v("\n这次不同的是, "),t("code",[a._v("rinya.bukkit.helloworldplugin")]),a._v("包已经被创建好了, 你不需要右键"),t("code",[a._v("src")]),a._v("创建类了, 那样你还需要输入类名. 这次请直接右键"),t("code",[a._v("rinya.bukkit.helloworldplugin")]),a._v("包, 这样类将会直接创建在这个包里.")]),a._v(" "),t("p",[t("a",{attrs:{"data-fancybox":"",href:"https://i.loli.net/2020/04/03/TDpHOPbeFWL4Xo8.jpg",rel:"external nofollow"}},[t("img",{attrs:{src:"https://i.loli.net/2020/04/03/TDpHOPbeFWL4Xo8.jpg",alt:"27.jpg"}})])]),a._v(" "),t("p",[a._v("这样, 类就创建好了.")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://i.loli.net/2020/04/03/7c8n9SgwfXWvhIl.jpg",alt:"28.jpg"}})]),a._v(" "),t("p",[a._v("我们说的类都被存到了这些以"),t("code",[a._v(".java")]),a._v("为后缀的文件中, 一个"),t("code",[a._v(".java")]),a._v("文件可以有多个类.")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("package")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("rinya"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("bukkit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("helloworldplugin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DemoClass")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("可以发现, 创建类的格式即"),t("code",[a._v("class + 空格 + 名字 + 一堆花括号")]),a._v(", 花括号内就是这个类的域, 里面的东西都是这个类里的东西."),t("br"),a._v("\n类文件第一行应该写明这个文件所在的包, 一般这种代码由Eclipse自动生成.")]),a._v(" "),t("p",[a._v("在这里定义的类"),t("code",[a._v("DemoClass")]),t("strong",[a._v("与文件名"),t("code",[a._v("DemoClass.java")]),a._v("一致")]),a._v(", 这个类是这个文件中的“老大”, 只有它有资格带有"),t("code",[a._v("public")]),a._v(".")]),a._v(" "),t("h3",{attrs:{id:"编写方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编写方法"}},[a._v("#")]),a._v(" 编写方法")]),a._v(" "),t("p",[a._v("我们可以在类中创建一个方法.")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("package")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("rinya"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("bukkit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("helloworldplugin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DemoClass")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("testMethod")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("就像这样, 我们就定义好了一个方法. 方法的定义方式是"),t("code",[a._v("返回值类型+空格+名称+小括号括起来的参数+花括号")]),a._v("."),t("br"),a._v("\n上面的代码定义的方法, "),t("code",[a._v("void")]),a._v("代表方法没有返回值, 名字为"),t("code",[a._v("testMethod")]),a._v(", 小括号里什么也没有, 代表这个方法执行不需要给它任何参数.")]),a._v(" "),t("p",[t("strong",[a._v("我们编写的带有功能性的代码, 通常都应该是写在方法里.")]),t("br"),a._v(" "),t("em",[a._v("教程之后出现的一些不完整的代码片段（没有定义类和方法）, 默认都是写在了某个方法里.")])]),a._v(" "),t("h2",{attrs:{id:"省略包名规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#省略包名规则"}},[a._v("#")]),a._v(" 省略包名规则")]),a._v(" "),t("p",[a._v("有时候在使用其他类时不一定要写它的完整类名, 你可以只写它的名字, 下面是个例子:"),t("br"),a._v(" "),t("em",[a._v("为了举例方便, 下面的例子没有沿用上面写的HelloWorldPlugin的代码, 仅仅是为了举个例子.")])]),a._v(" "),t("p",[t("a",{attrs:{"data-fancybox":"",href:"https://i.loli.net/2020/03/29/jJM2i6DbA1awZNT.jpg",rel:"external nofollow"}},[t("img",{attrs:{src:"https://i.loli.net/2020/03/29/jJM2i6DbA1awZNT.jpg",alt:""}})])]),a._v(" "),t("p",[a._v("你会发现在使用"),t("code",[a._v("TestClassTwo")]),a._v("这个类时, 我并没有写它的包名."),t("br"),a._v("\n这是因为"),t("code",[a._v("TestClassTwo")]),a._v("这个类与我们当前编写的类在同一个包内. "),t("strong",[a._v("只要在一个包内就可以省略掉包名.")]),t("br"),a._v("\n这里的"),t("code",[a._v("new tryjava.demo.two.TestClass();")]),a._v("没有省略包名, 因为"),t("code",[a._v("new TestClass();")]),a._v("指的就是这个类自己了, 而不是"),t("code",[a._v("tryjava.demo.two.TestClass")]),a._v("类.")]),a._v(" "),t("p",[a._v("也许你注意到了, "),t("code",[a._v("new TestClassThree();")]),a._v("这行代码有一个红色波浪线, 这代表我们的这行代码是错误的, 这些问题必须纠正才可以. 你之后的开发中还会看到黄色的波浪线, 黄色代表警告, 意思是这样写不太好, 但是程序其实也能运行.")]),a._v(" "),t("p",[a._v("在Eclipse中, 我们把鼠标放在画有下划线的代码上, 你会发现弹出了这样的黄色窗口:")]),a._v(" "),t("p",[t("a",{attrs:{"data-fancybox":"",href:"https://i.loli.net/2020/03/29/Q9lB7FbasKzyjZ6.jpg",rel:"external nofollow"}},[t("img",{attrs:{src:"https://i.loli.net/2020/03/29/Q9lB7FbasKzyjZ6.jpg",alt:""}})])]),a._v(" "),t("p",[a._v("我们可以在这里看到我们错在了哪里."),t("br"),a._v("\n这里Eclipse告诉我们"),t("code",[a._v("TestClassThree cannot be resolved to a type")]),a._v(", 意思是这并不是一个确切的类型, 说明我们还没有定义这个类."),t("br"),a._v("\n确实是这样, 我们提到只有同一个包内有这个类才可以省略掉包名, 而"),t("code",[a._v("TestClassThree")]),a._v("并不在与"),t("code",[a._v("TestClass")]),a._v("类一样的包"),t("code",[a._v("tryjava.demo.one")]),a._v("内, 所以包名是不可以省略的, 必须要把"),t("code",[a._v("tryjava.demo.one.three.")]),a._v("加上才可以.")]),a._v(" "),t("p",[t("strong",[a._v("其实, 如果这个类名称不会引起重名问题, 你可以直接使用"),t("code",[a._v("import")]),a._v("语句把想使用的类的包引入, 即可省略这个包名了.")]),t("br"),a._v("\n比如我写了"),t("code",[a._v("import tryjava.demo.one.three;")]),a._v("后, 以后这个包内的类我可以随便用, 不用写完整的类名了.")]),a._v(" "),t("p",[a._v("Eclipse已经帮我们发现了这个问题, 其实在开发过程中, 我们几乎不写"),t("code",[a._v("import")]),a._v(", 都是IDE补全的."),t("br"),a._v("\nEclipse的黄框中已经给我们了一键补全功能, 点击"),t("code",[a._v("Import TestClassThree(tryjava.demo.one.three)")]),a._v("即可补全该语句.")]),a._v(" "),t("p",[a._v("现在代码变成了这样:")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("package")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("tryjava"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("demo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("one")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("tryjava"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("demo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("one"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("three")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TestClassThree")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TestClass")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" tryjava"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("demo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("two"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TestClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TestClassTwo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TestClassThree")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("一切正常.")]),a._v(" "),t("p",[a._v("省略包名还有一种特殊情况, Java中特殊规定, 使用"),t("code",[a._v("java.lang")]),a._v("包内的类都可以省略包名."),t("br"),a._v("\n你即将会见到这种特殊情况, 之后我们经常用到的"),t("code",[a._v("String")]),a._v("就是这样.")]),a._v(" "),t("p",[t("strong",[a._v("以上我们已经讲述了Eclipse的具体使用方式, 在今后的教程中将直接放代码, 不会大量出现截图了.")])]),a._v(" "),t("h2",{attrs:{id:"类的继承"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类的继承"}},[a._v("#")]),a._v(" 类的继承")]),a._v(" "),t("h3",{attrs:{id:"animal、dog和cat的继承关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#animal、dog和cat的继承关系"}},[a._v("#")]),a._v(" Animal、Dog和Cat的继承关系")]),a._v(" "),t("p",[a._v("我们可以用Java语言的角度去解释最开始我们阐述的"),t("code",[a._v("Animal")]),a._v("、"),t("code",[a._v("Dog")]),a._v("和"),t("code",[a._v("Cat")]),a._v("的关系:")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Animal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//有一个类是Animal")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Dog")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Animal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//这里表示Dog类继承了Animal类")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Cat")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Animal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//这里表示Cat类继承了Animal类")]),a._v("\n")])])]),t("p",[t("strong",[a._v("同一个类不能继承多个类!")])]),a._v(" "),t("h3",{attrs:{id:"继承方法与覆写主类方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#继承方法与覆写主类方法"}},[a._v("#")]),a._v(" 继承方法与覆写主类方法")]),a._v(" "),t("p",[a._v("现在我们在Animal类里写一个方法叫做"),t("code",[a._v("say")]),a._v(", 让动物叫.")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Animal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("say")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"动物在咆哮"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("然后在"),t("code",[a._v("main")]),a._v("方法内创建一个"),t("code",[a._v("Cat")]),a._v("对象.")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Cat")]),a._v(" cat1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Cat")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\ncat1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("say")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//子类继承了主类, 所以可以调用主类的方法")]),a._v("\n")])])]),t("p",[a._v("输出内容")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("动物在咆哮\n")])])]),t("p",[a._v("但是每个动物叫的声音是不一样的, 子类可以覆写主类的方法")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Cat")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Animal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Override")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("say")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"喵喵喵"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Dog")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Animal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Override")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("say")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"汪汪汪"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("现在我们创建"),t("code",[a._v("Cat")]),a._v("对象和"),t("code",[a._v("Dog")]),a._v("对象调用"),t("code",[a._v("say")]),a._v("方法时执行的内容就不一样了. 输出的是它们各自的叫声."),t("br"),a._v("\n覆写的方法上面要加"),t("code",[a._v("@Override")]),a._v("注解."),t("br"),a._v("\n其实"),t("code",[a._v("@Override")]),a._v("该注解可以省略, 但是加上以后更加规范, 它告诉JVM这是覆写主类的方法.")]),a._v(" "),t("h3",{attrs:{id:"最简单的多态概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#最简单的多态概念"}},[a._v("#")]),a._v(" 最简单的多态概念")]),a._v(" "),t("p",[a._v("刚才我们提到的"),t("code",[a._v("Cat")]),a._v("对象, 因为其"),t("code",[a._v("Cat")]),a._v("类继承自"),t("code",[a._v("Animal")]),a._v("类, 所以它本质上也是一个"),t("code",[a._v("Animal")]),a._v("对象."),t("br"),a._v("\n所以一个"),t("code",[a._v("Animal")]),a._v("类型的变量也可以存"),t("code",[a._v("Cat")]),a._v("类型的对象.")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Animal")]),a._v(" animal "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Cat")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("h3",{attrs:{id:"解释先前的代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解释先前的代码"}},[a._v("#")]),a._v(" 解释先前的代码")]),a._v(" "),t("p",[a._v("我们之前做第一个插件时, 创建了一个"),t("code",[a._v("HelloWorldPluginMain")]),a._v("类, 你可能注意到了, 这个类继承了"),t("code",[a._v("JavaPlugin")]),a._v("类.")]),a._v(" "),t("p",[a._v("在一款插件中, "),t("strong",[a._v("继承了"),t("code",[a._v("JavaPlugin")]),a._v("类的类才能作为主类")]),a._v(". "),t("strong",[a._v("一个类完整的名字是"),t("code",[a._v("包名+英文句号+类名")])]),a._v(", 在"),t("code",[a._v("plugin.yml")]),a._v("中我们的"),t("code",[a._v("main")]),a._v("一项填写了"),t("code",[a._v("rinya.bukkit.helloworldplugin.HelloWorldPluginMain")]),a._v(", 其实意义就是指定这个类是插件的主类.")]),a._v(" "),t("p",[a._v("服务端发现插件的jar文件后, 首先就会去找"),t("code",[a._v("plugin")]),a._v(", 看明白这个插件的"),t("code",[a._v("name")]),a._v("(插件名), "),t("code",[a._v("main")]),a._v("(主类), 并将"),t("code",[a._v("main")]),a._v("指定的主类加载读取. 也就是, "),t("strong",[a._v("主类是一个插件的入口")]),a._v(".")]),a._v(" "),t("p",[t("code",[a._v("onLoad")]),a._v("、"),t("code",[a._v("onEnable")]),a._v("和"),t("code",[a._v("onDisable")]),a._v("方法都是父类的方法, 我们在我们的插件主类里将它们覆写了."),t("br"),a._v("\n插件被加载后, 在服务端刚刚启动时会调用插件的"),t("code",[a._v("onLoad")]),a._v("方法(我们没写, 所以相当于是空的), 服务器地图等数据被加载完毕后会调用插件的"),t("code",[a._v("onEnable")]),a._v("方法(我们在里面写了"),t("code",[a._v('System.out.println("Hello World!");')]),a._v("), 服务端关闭或插件被卸载时, 会调用插件的"),t("code",[a._v("onDisable")]),a._v("方法(我们里面什么也没写).")]),a._v(" "),t("p",[a._v("这就是我们之前写的插件的工作原理了!")])])}),[],!1,null,null,null);s.default=e.exports}}]);