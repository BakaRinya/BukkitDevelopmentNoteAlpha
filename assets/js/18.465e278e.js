(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{259:function(t,n,a){"use strict";a.r(n);var s=a(28),e=Object(s.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"引用内容存档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用内容存档"}},[t._v("#")]),t._v(" 引用内容存档")]),t._v(" "),a("h2",{attrs:{id:"_1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1"}},[t._v("#")]),t._v(" 1")]),t._v(" "),a("p",[t._v("代码：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 浮点数的打印")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigDecimal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10000000000"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 普通的数字字符串")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigDecimal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"100.000"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 去除末尾多余的0")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigDecimal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"100.000"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stripTrailingZeros")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 避免输出科学计数法")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigDecimal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"100.000"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stripTrailingZeros")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toPlainString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("输出结果：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("10000000000\n100.000\n1E+2\n100\n")])])]),a("h2",{attrs:{id:"_2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2"}},[t._v("#")]),t._v(" 2")]),t._v(" "),a("p",[t._v("前阵子做题遇到了大数的精确计算，再次认识了bigdecimal\n关于Bigdecimal意外的有许多小知识点和坑，这里特此整理一下为方便以后学习，希望能帮助到其他的萌新")]),t._v(" "),a("p",[t._v("BigDecimal的运算——加减乘除\n首先是bigdecimal的初始化\n这里对比了两种形式，第一种直接value写数字的值，第二种用string来表示")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('    BigDecimal num1 = new BigDecimal(0.005);\n    BigDecimal num2 = new BigDecimal(1000000);\n    BigDecimal num3 = new BigDecimal(-1000000);\n    //尽量用字符串的形式初始化\n    BigDecimal num12 = new BigDecimal("0.005");\n    BigDecimal num22 = new BigDecimal("1000000");\n    BigDecimal num32 = new BigDecimal("-1000000");\n')])])]),a("p",[t._v("我们对其进行加减乘除绝对值的运算")]),t._v(" "),a("p",[t._v("其实就是Bigdecimal的类的一些调用")]),t._v(" "),a("p",[t._v("加法 add()函数     减法subtract()函数\n乘法multiply()函数    除法divide()函数    绝对值abs()函数\n我这里承接上面初始化Bigdecimal分别用string和数进行运算对比")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("    //加法\n    BigDecimal result1 = num1.add(num2);\n    BigDecimal result12 = num12.add(num22);\n\n    //减法\n    BigDecimal result2 = num1.subtract(num2);\n    BigDecimal result22 = num12.subtract(num22);\n\n    //乘法\n    BigDecimal result3 = num1.multiply(num2);\n    BigDecimal result32 = num12.multiply(num22);\n\n    //绝对值\n    BigDecimal result4 = num3.abs();\n    BigDecimal result42 = num32.abs();\n\n    //除法\n    BigDecimal result5 = num2.divide(num1,20,BigDecimal.ROUND_HALF_UP);\n    BigDecimal result52 = num22.divide(num12,20,BigDecimal.ROUND_HALF_UP);\n")])])]),a("p",[t._v("我把result全部输出可以看到结果")]),t._v(" "),a("p",[t._v("这里出现了差异，这也是为什么初始化建议使用string的原因")]),t._v(" "),a("p",[t._v("※ 注意：\n1）System.out.println()中的数字默认是double类型的，double类型小数计算不精准。")]),t._v(" "),a("p",[t._v("2）使用BigDecimal类构造方法传入double类型时，计算的结果也是不精确的！")]),t._v(" "),a("p",[t._v("因为不是所有的浮点数都能够被精确的表示成一个double 类型值，有些浮点数值不能够被精确的表示成 double 类型值，因此它会被表示成与它最接近的 double 类型的值。必须改用传入String的构造方法。这一点在BigDecimal类的构造方法注释中有说明。")]),t._v(" "),a("p",[t._v("完整的test代码如下：")]),t._v(" "),a("p",[t._v("import java.math.BigDecimal;\nimport java.util.Scanner;")]),t._v(" "),a("p",[t._v("public class TestThree {")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('public static void main(String[] args) {\n\n    BigDecimal num1 = new BigDecimal(0.005);\n    BigDecimal num2 = new BigDecimal(1000000);\n    BigDecimal num3 = new BigDecimal(-1000000);\n    //尽量用字符串的形式初始化\n    BigDecimal num12 = new BigDecimal("0.005");\n    BigDecimal num22 = new BigDecimal("1000000");\n    BigDecimal num32 = new BigDecimal("-1000000");\n\n    //加法\n    BigDecimal result1 = num1.add(num2);\n    BigDecimal result12 = num12.add(num22);\n    //减法\n    BigDecimal result2 = num1.subtract(num2);\n    BigDecimal result22 = num12.subtract(num22);\n    //乘法\n    BigDecimal result3 = num1.multiply(num2);\n    BigDecimal result32 = num12.multiply(num22);\n    //绝对值\n    BigDecimal result4 = num3.abs();\n    BigDecimal result42 = num32.abs();\n    //除法\n    BigDecimal result5 = num2.divide(num1,20,BigDecimal.ROUND_HALF_UP);\n    BigDecimal result52 = num22.divide(num12,20,BigDecimal.ROUND_HALF_UP);\n\n    System.out.println("加法用value结果："+result1);\n    System.out.println("加法用string结果："+result12);\n\n    System.out.println("减法value结果："+result2);\n    System.out.println("减法用string结果："+result22);\n\n    System.out.println("乘法用value结果："+result3);\n    System.out.println("乘法用string结果："+result32);\n\n    System.out.println("绝对值用value结果："+result4);\n    System.out.println("绝对值用string结果："+result42);\n\n    System.out.println("除法用value结果："+result5);\n    System.out.println("除法用string结果："+result52);\n}\n')])])]),a("p",[t._v("}\n除法divide()参数使用\n使用除法函数在divide的时候要设置各种参数，要精确的小数位数和舍入模式，不然会出现报错")]),t._v(" "),a("p",[t._v("我们可以看到divide函数配置的参数如下")]),t._v(" "),a("p",[t._v("即为 （BigDecimal divisor 除数， int scale 精确小数位，  int roundingMode 舍入模式）\n可以看到舍入模式有很多种BigDecimal.ROUND_XXXX_XXX, 具体都是什么意思呢")]),t._v(" "),a("p",[t._v("计算1÷3的结果（最后一种ROUND_UNNECESSARY在结果为无限小数的情况下会报错）")]),t._v(" "),a("p",[t._v("八种舍入模式解释如下\n1、ROUND_UP")]),t._v(" "),a("p",[t._v("舍入远离零的舍入模式。")]),t._v(" "),a("p",[t._v("在丢弃非零部分之前始终增加数字(始终对非零舍弃部分前面的数字加1)。")]),t._v(" "),a("p",[t._v("注意，此舍入模式始终不会减少计算值的大小。")]),t._v(" "),a("p",[t._v("2、ROUND_DOWN")]),t._v(" "),a("p",[t._v("接近零的舍入模式。")]),t._v(" "),a("p",[t._v("在丢弃某部分之前始终不增加数字(从不对舍弃部分前面的数字加1，即截短)。")]),t._v(" "),a("p",[t._v("注意，此舍入模式始终不会增加计算值的大小。")]),t._v(" "),a("p",[t._v("3、ROUND_CEILING")]),t._v(" "),a("p",[t._v("接近正无穷大的舍入模式。")]),t._v(" "),a("p",[t._v("如果 BigDecimal 为正，则舍入行为与 ROUND_UP 相同;")]),t._v(" "),a("p",[t._v("如果为负，则舍入行为与 ROUND_DOWN 相同。")]),t._v(" "),a("p",[t._v("注意，此舍入模式始终不会减少计算值。")]),t._v(" "),a("p",[t._v("4、ROUND_FLOOR")]),t._v(" "),a("p",[t._v("接近负无穷大的舍入模式。")]),t._v(" "),a("p",[t._v("如果 BigDecimal 为正，则舍入行为与 ROUND_DOWN 相同;")]),t._v(" "),a("p",[t._v("如果为负，则舍入行为与 ROUND_UP 相同。")]),t._v(" "),a("p",[t._v("注意，此舍入模式始终不会增加计算值。")]),t._v(" "),a("p",[t._v("5、ROUND_HALF_UP")]),t._v(" "),a("p",[t._v("向“最接近的”数字舍入，如果与两个相邻数字的距离相等，则为向上舍入的舍入模式。")]),t._v(" "),a("p",[t._v("如果舍弃部分 >= 0.5，则舍入行为与 ROUND_UP 相同;否则舍入行为与 ROUND_DOWN 相同。")]),t._v(" "),a("p",[t._v("注意，这是我们大多数人在小学时就学过的舍入模式(四舍五入)。")]),t._v(" "),a("p",[t._v("6、ROUND_HALF_DOWN")]),t._v(" "),a("p",[t._v("向“最接近的”数字舍入，如果与两个相邻数字的距离相等，则为上舍入的舍入模式。")]),t._v(" "),a("p",[t._v("如果舍弃部分 > 0.5，则舍入行为与 ROUND_UP 相同;否则舍入行为与 ROUND_DOWN 相同(五舍六入)。")]),t._v(" "),a("p",[t._v("7、ROUND_HALF_EVEN")]),t._v(" "),a("p",[t._v("向“最接近的”数字舍入，如果与两个相邻数字的距离相等，则向相邻的偶数舍入。")]),t._v(" "),a("p",[t._v("如果舍弃部分左边的数字为奇数，则舍入行为与 ROUND_HALF_UP 相同;")]),t._v(" "),a("p",[t._v("如果为偶数，则舍入行为与 ROUND_HALF_DOWN 相同。")]),t._v(" "),a("p",[t._v("注意，在重复进行一系列计算时，此舍入模式可以将累加错误减到最小。")]),t._v(" "),a("p",[t._v("此舍入模式也称为“银行家舍入法”，主要在美国使用。四舍六入，五分两种情况。")]),t._v(" "),a("p",[t._v("如果前一位为奇数，则入位，否则舍去。")]),t._v(" "),a("p",[t._v("以下例子为保留小数点1位，那么这种舍入方式下的结果。")]),t._v(" "),a("p",[t._v("1.15>1.2 1.25>1.2")]),t._v(" "),a("p",[t._v("8、ROUND_UNNECESSARY")]),t._v(" "),a("p",[t._v("断言请求的操作具有精确的结果，因此不需要舍入。")]),t._v(" "),a("p",[t._v("如果对获得精确结果的操作指定此舍入模式，则抛出ArithmeticException。")]),t._v(" "),a("p",[t._v("http://www.bdqn.cn/news/201311/11834.shtml\n————————————————\n版权声明：本文为CSDN博主「haiyinshushe」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/haiyinshushe/java/article/details/82721234")])])}),[],!1,null,null,null);n.default=e.exports}}]);