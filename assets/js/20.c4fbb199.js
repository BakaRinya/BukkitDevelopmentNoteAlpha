(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{265:function(t,a,s){"use strict";s.r(a);var n=s(28),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"异常处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异常处理"}},[t._v("#")]),t._v(" 异常处理")]),t._v(" "),s("h2",{attrs:{id:"try-catch块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#try-catch块"}},[t._v("#")]),t._v(" try-catch块")]),t._v(" "),s("p",[t._v("现在我们从玩家那里得到了他们输入的数字a和b. 现在我们算一算a除以b是多少.")]),t._v(" "),s("p",[t._v("但是有个问题, 玩家会不会恶作剧把b输入一个0进来呢? 这样会报错."),s("br"),t._v("\n也许你会说, 用if判断一下a和b是不是在某个取值范围内就可以了. 对, 就应该是这样, 大家都是这样干的.")]),t._v(" "),s("p",[t._v("这里想告诉你的是, 在你能大概预感到某个代码会报错时, 你可以用try-catch来捕获它."),s("br"),t._v("\n我们假设我们能预判出来"),s("code",[t._v("double c=a/b;")]),t._v("这句代码会报错, 还不用if的话.")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// double c = a/b; 这样肯定是报错的")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//把你认为要报错的代码套在这里")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这里的Exception应该精确到具体的错误类型")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//因为想捕获所有的错误, 所以写了Exception")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"报错了!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出报错信息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hi!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("你可以试试看, 如果没有try-catch, 该方法的某句代码报错后会立刻停止运行该方法, 而try-catch中报错的话会绕过这块内容, 继续输出下面的"),s("code",[t._v("hi!")]),t._v(".")]),t._v(" "),s("p",[t._v("try-catch捕获的实际上是"),s("code",[t._v("Exception")]),t._v("对象. 有很多种"),s("code",[t._v("Exception")]),t._v("对象.")]),t._v(" "),s("p",[s("strong",[t._v("在实际开发中, 没有必要把所有的代码都套上try-catch, 那样没什么用. 只需要套上你认为会报错的代码即可.")])]),t._v(" "),s("h2",{attrs:{id:"抛出错误"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#抛出错误"}},[t._v("#")]),t._v(" 抛出错误")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这是我们自己写的方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"只要执行我, 我就会报错"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("利用throw语句, 我们的"),s("code",[t._v("a")]),t._v("方法只要被调用, 它就会抛出错误."),s("br"),t._v("\n由此可见, throw可以抛出一个Exception对象.")]),t._v(" "),s("p",[t._v("你也可以定义一个自己的类, 继承自"),s("code",[t._v("Exception")]),t._v(", 来抛出自己的"),s("code",[t._v("Exception")]),t._v("对象.")]),t._v(" "),s("h2",{attrs:{id:"error"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#error"}},[t._v("#")]),t._v(" Error")]),t._v(" "),s("p",[s("code",[t._v("Exception")]),t._v("是可以被捕获的, 但是"),s("code",[t._v("Error")]),t._v("是不可以被捕获的."),s("br"),t._v("\nJVM错误, 例如内存不足、崩溃等影响程序继续运行的问题, JVM会抛出一个Error.")])])}),[],!1,null,null,null);a.default=r.exports}}]);